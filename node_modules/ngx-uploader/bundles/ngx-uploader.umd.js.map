{"version":3,"sources":["webpack:///webpack/universalModuleDefinition","webpack:///ngx-uploader.umd.js","webpack:///webpack/bootstrap 09a2b4edf7ecd94e7df2","webpack:///external \"@angular/core\"","webpack:///./lib/src/ngx-uploader/classes/ngx-uploader.class.js","webpack:///./lib/src/ngx-uploader/directives/ng-file-drop.directive.js","webpack:///./lib/src/ngx-uploader/directives/ng-file-select.directive.js","webpack:///./lib/src/ngx-uploader/module/ngx-uploader.module.js","webpack:///external \"rxjs/Observable\"","webpack:///external \"rxjs/add/observable/of\"","webpack:///external \"rxjs/add/observable/from\"","webpack:///external \"rxjs/add/operator/mergeMap\"","webpack:///external \"rxjs/add/operator/map\""],"names":["root","factory","exports","module","require","define","amd","this","__WEBPACK_EXTERNAL_MODULE_0__","__WEBPACK_EXTERNAL_MODULE_6__","__WEBPACK_EXTERNAL_MODULE_7__","__WEBPACK_EXTERNAL_MODULE_8__","__WEBPACK_EXTERNAL_MODULE_9__","__WEBPACK_EXTERNAL_MODULE_10__","modules","__webpack_require__","moduleId","installedModules","i","l","call","m","c","d","name","getter","o","Object","defineProperty","configurable","enumerable","get","n","__esModule","object","property","prototype","hasOwnProperty","p","s","__webpack_exports__","humanizeBytes","bytes","sizes","Math","floor","log","parseFloat","pow","toFixed","UploadStatus","NgUploaderService","__WEBPACK_IMPORTED_MODULE_0__angular_core__","__WEBPACK_IMPORTED_MODULE_1_rxjs_Observable__","__WEBPACK_IMPORTED_MODULE_2_rxjs_add_observable_of__","__WEBPACK_IMPORTED_MODULE_3_rxjs_add_observable_from__","__WEBPACK_IMPORTED_MODULE_4_rxjs_add_operator_mergeMap__","__WEBPACK_IMPORTED_MODULE_5_rxjs_add_operator_map__","files","serviceEvents","handleFiles","incomingFiles","_this","_a","push","apply","map","file","uploadFile","fileIndex","id","generateId","size","type","form","FormData","progress","status","Queue","data","percentage","speed","speedHuman","startTime","endTime","eta","etaHuman","lastModifiedDate","sub","undefined","nativeFile","emit","initInputEvents","input","subscribe","event","uploadFileIndex","findIndex","concurrency","Number","POSITIVE_INFINITY","filter","length","of","mergeMap","id_1","index","unsubscribe","Canceled","forEach","splice","observer","url","method","headers","reader","FileReader","xhr","XMLHttpRequest","time","Date","getTime","progressStartTime","upload","addEventListener","e","lengthComputable","round","loaded","total","diff","ceil","Uploading","secondsToHuman","next","error","complete","onreadystatechange","readyState","DONE","speedAverage","Done","responseStatus","response","JSON","parse","open","withCredentials","uploadFile_1","uploadIndex","append","fieldName","keys","key","setRequestHeader","send","abort","sec","toISOString","substr","random","toString","substring","NgFileDropDirective","__WEBPACK_IMPORTED_MODULE_1__classes_ngx_uploader_class__","__decorate","decorators","target","desc","arguments","r","getOwnPropertyDescriptor","Reflect","decorate","__metadata","k","v","metadata","elementRef","stopEvent","stopPropagation","preventDefault","uploadOutput","ngOnInit","el","nativeElement","uploadInput","ngOnDestroy","onDrop","dataTransfer","onDragOver","onDragLeave","Function","Event","selector","NgFileSelectDirective","fileListener","removeEventListener","value","__WEBPACK_IMPORTED_MODULE_0__src_ngx_uploader_module_ngx_uploader_module__","__WEBPACK_IMPORTED_MODULE_1__src_ngx_uploader_classes_ngx_uploader_class__","__WEBPACK_IMPORTED_MODULE_2__src_ngx_uploader_directives_ng_file_select_directive__","__WEBPACK_IMPORTED_MODULE_3__src_ngx_uploader_directives_ng_file_drop_directive__","NgUploaderModule","__WEBPACK_IMPORTED_MODULE_1__directives_ng_file_drop_directive__","__WEBPACK_IMPORTED_MODULE_2__directives_ng_file_select_directive__","declarations"],"mappings":"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","file":"ngx-uploader.umd.js","sourcesContent":["(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory(require(\"@angular/core\"), require(\"rxjs/Observable\"), require(\"rxjs/add/observable/of\"), require(\"rxjs/add/observable/from\"), require(\"rxjs/add/operator/mergeMap\"), require(\"rxjs/add/operator/map\"));\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine(\"ngx-uploader\", [\"@angular/core\", \"rxjs/Observable\", \"rxjs/add/observable/of\", \"rxjs/add/observable/from\", \"rxjs/add/operator/mergeMap\", \"rxjs/add/operator/map\"], factory);\n\telse if(typeof exports === 'object')\n\t\texports[\"ngx-uploader\"] = factory(require(\"@angular/core\"), require(\"rxjs/Observable\"), require(\"rxjs/add/observable/of\"), require(\"rxjs/add/observable/from\"), require(\"rxjs/add/operator/mergeMap\"), require(\"rxjs/add/operator/map\"));\n\telse\n\t\troot[\"ngx-uploader\"] = factory(root[\"@angular/core\"], root[\"rxjs/Observable\"], root[\"rxjs/add/observable/of\"], root[\"rxjs/add/observable/from\"], root[\"rxjs/add/operator/mergeMap\"], root[\"rxjs/add/operator/map\"]);\n})(this, function(__WEBPACK_EXTERNAL_MODULE_0__, __WEBPACK_EXTERNAL_MODULE_6__, __WEBPACK_EXTERNAL_MODULE_7__, __WEBPACK_EXTERNAL_MODULE_8__, __WEBPACK_EXTERNAL_MODULE_9__, __WEBPACK_EXTERNAL_MODULE_10__) {\nreturn \n\n\n// WEBPACK FOOTER //\n// webpack/universalModuleDefinition","(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory(require(\"@angular/core\"), require(\"rxjs/Observable\"), require(\"rxjs/add/observable/of\"), require(\"rxjs/add/observable/from\"), require(\"rxjs/add/operator/mergeMap\"), require(\"rxjs/add/operator/map\"));\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine(\"ngx-uploader\", [\"@angular/core\", \"rxjs/Observable\", \"rxjs/add/observable/of\", \"rxjs/add/observable/from\", \"rxjs/add/operator/mergeMap\", \"rxjs/add/operator/map\"], factory);\n\telse if(typeof exports === 'object')\n\t\texports[\"ngx-uploader\"] = factory(require(\"@angular/core\"), require(\"rxjs/Observable\"), require(\"rxjs/add/observable/of\"), require(\"rxjs/add/observable/from\"), require(\"rxjs/add/operator/mergeMap\"), require(\"rxjs/add/operator/map\"));\n\telse\n\t\troot[\"ngx-uploader\"] = factory(root[\"@angular/core\"], root[\"rxjs/Observable\"], root[\"rxjs/add/observable/of\"], root[\"rxjs/add/observable/from\"], root[\"rxjs/add/operator/mergeMap\"], root[\"rxjs/add/operator/map\"]);\n})(this, function(__WEBPACK_EXTERNAL_MODULE_0__, __WEBPACK_EXTERNAL_MODULE_6__, __WEBPACK_EXTERNAL_MODULE_7__, __WEBPACK_EXTERNAL_MODULE_8__, __WEBPACK_EXTERNAL_MODULE_9__, __WEBPACK_EXTERNAL_MODULE_10__) {\nreturn /******/ (function(modules) { // webpackBootstrap\n/******/ \t// The module cache\n/******/ \tvar installedModules = {};\n/******/\n/******/ \t// The require function\n/******/ \tfunction __webpack_require__(moduleId) {\n/******/\n/******/ \t\t// Check if module is in cache\n/******/ \t\tif(installedModules[moduleId]) {\n/******/ \t\t\treturn installedModules[moduleId].exports;\n/******/ \t\t}\n/******/ \t\t// Create a new module (and put it into the cache)\n/******/ \t\tvar module = installedModules[moduleId] = {\n/******/ \t\t\ti: moduleId,\n/******/ \t\t\tl: false,\n/******/ \t\t\texports: {}\n/******/ \t\t};\n/******/\n/******/ \t\t// Execute the module function\n/******/ \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n/******/\n/******/ \t\t// Flag the module as loaded\n/******/ \t\tmodule.l = true;\n/******/\n/******/ \t\t// Return the exports of the module\n/******/ \t\treturn module.exports;\n/******/ \t}\n/******/\n/******/\n/******/ \t// expose the modules object (__webpack_modules__)\n/******/ \t__webpack_require__.m = modules;\n/******/\n/******/ \t// expose the module cache\n/******/ \t__webpack_require__.c = installedModules;\n/******/\n/******/ \t// define getter function for harmony exports\n/******/ \t__webpack_require__.d = function(exports, name, getter) {\n/******/ \t\tif(!__webpack_require__.o(exports, name)) {\n/******/ \t\t\tObject.defineProperty(exports, name, {\n/******/ \t\t\t\tconfigurable: false,\n/******/ \t\t\t\tenumerable: true,\n/******/ \t\t\t\tget: getter\n/******/ \t\t\t});\n/******/ \t\t}\n/******/ \t};\n/******/\n/******/ \t// getDefaultExport function for compatibility with non-harmony modules\n/******/ \t__webpack_require__.n = function(module) {\n/******/ \t\tvar getter = module && module.__esModule ?\n/******/ \t\t\tfunction getDefault() { return module['default']; } :\n/******/ \t\t\tfunction getModuleExports() { return module; };\n/******/ \t\t__webpack_require__.d(getter, 'a', getter);\n/******/ \t\treturn getter;\n/******/ \t};\n/******/\n/******/ \t// Object.prototype.hasOwnProperty.call\n/******/ \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n/******/\n/******/ \t// __webpack_public_path__\n/******/ \t__webpack_require__.p = \"/\";\n/******/\n/******/ \t// Load entry module and return exports\n/******/ \treturn __webpack_require__(__webpack_require__.s = 4);\n/******/ })\n/************************************************************************/\n/******/ ([\n/* 0 */\n/***/ (function(module, exports) {\n\nmodule.exports = __WEBPACK_EXTERNAL_MODULE_0__;\n\n/***/ }),\n/* 1 */\n/***/ (function(module, __webpack_exports__, __webpack_require__) {\n\n\"use strict\";\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"b\", function() { return UploadStatus; });\n/* harmony export (immutable) */ __webpack_exports__[\"c\"] = humanizeBytes;\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"a\", function() { return NgUploaderService; });\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__angular_core__ = __webpack_require__(0);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__angular_core___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_0__angular_core__);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1_rxjs_Observable__ = __webpack_require__(6);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1_rxjs_Observable___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_1_rxjs_Observable__);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_2_rxjs_add_observable_of__ = __webpack_require__(7);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_2_rxjs_add_observable_of___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_2_rxjs_add_observable_of__);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_3_rxjs_add_observable_from__ = __webpack_require__(8);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_3_rxjs_add_observable_from___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_3_rxjs_add_observable_from__);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_4_rxjs_add_operator_mergeMap__ = __webpack_require__(9);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_4_rxjs_add_operator_mergeMap___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_4_rxjs_add_operator_mergeMap__);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_5_rxjs_add_operator_map__ = __webpack_require__(10);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_5_rxjs_add_operator_map___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_5_rxjs_add_operator_map__);\n\n\n\n\n\n\nvar UploadStatus;\n(function (UploadStatus) {\n    UploadStatus[UploadStatus[\"Queue\"] = 0] = \"Queue\";\n    UploadStatus[UploadStatus[\"Uploading\"] = 1] = \"Uploading\";\n    UploadStatus[UploadStatus[\"Done\"] = 2] = \"Done\";\n    UploadStatus[UploadStatus[\"Canceled\"] = 3] = \"Canceled\";\n})(UploadStatus || (UploadStatus = {}));\nfunction humanizeBytes(bytes) {\n    if (bytes === 0) {\n        return '0 Byte';\n    }\n    var k = 1024;\n    var sizes = ['Bytes', 'KB', 'MB', 'GB', 'TB', 'PB'];\n    var i = Math.floor(Math.log(bytes) / Math.log(k));\n    return parseFloat((bytes / Math.pow(k, i)).toFixed(2)) + ' ' + sizes[i];\n}\nvar NgUploaderService = (function () {\n    function NgUploaderService() {\n        this.files = [];\n        this.serviceEvents = new __WEBPACK_IMPORTED_MODULE_0__angular_core__[\"EventEmitter\"]();\n    }\n    NgUploaderService.prototype.handleFiles = function (incomingFiles) {\n        var _this = this;\n        (_a = this.files).push.apply(_a, [].map.call(incomingFiles, function (file, i) {\n            var uploadFile = {\n                fileIndex: i,\n                id: _this.generateId(),\n                name: file.name,\n                size: file.size,\n                type: file.type,\n                form: new FormData(),\n                progress: {\n                    status: UploadStatus.Queue,\n                    data: {\n                        percentage: 0,\n                        speed: 0,\n                        speedHuman: humanizeBytes(0) + \"/s\",\n                        startTime: null,\n                        endTime: null,\n                        eta: null,\n                        etaHuman: null\n                    }\n                },\n                lastModifiedDate: file.lastModifiedDate,\n                sub: undefined,\n                nativeFile: file\n            };\n            i = i + 1;\n            _this.serviceEvents.emit({ type: 'addedToQueue', file: uploadFile });\n            return uploadFile;\n        }));\n        this.serviceEvents.emit({ type: 'allAddedToQueue' });\n        var _a;\n    };\n    NgUploaderService.prototype.initInputEvents = function (input) {\n        var _this = this;\n        input.subscribe(function (event) {\n            switch (event.type) {\n                case 'uploadFile':\n                    var uploadFileIndex = _this.files.findIndex(function (file) { return file === event.file; });\n                    if (uploadFileIndex !== -1 && event.file) {\n                        _this.files[uploadFileIndex].sub = _this.uploadFile(event.file, event).subscribe(function (data) {\n                            _this.serviceEvents.emit(data);\n                        });\n                    }\n                    break;\n                case 'uploadAll':\n                    var concurrency = typeof event.concurrency !== 'undefined' && event.concurrency > 0 ? event.concurrency : Number.POSITIVE_INFINITY;\n                    var files = _this.files.filter(function (file) { return file.progress.status === UploadStatus.Queue; });\n                    if (!files.length) {\n                        return;\n                    }\n                    __WEBPACK_IMPORTED_MODULE_1_rxjs_Observable__[\"Observable\"].of.apply(__WEBPACK_IMPORTED_MODULE_1_rxjs_Observable__[\"Observable\"], files).mergeMap(function (file) {\n                        return _this.uploadFile(file, event);\n                    }, concurrency)\n                        .subscribe(function (data) {\n                        _this.serviceEvents.emit(data);\n                    });\n                    break;\n                case 'cancel':\n                    var id_1 = event.id || null;\n                    if (!id_1) {\n                        return;\n                    }\n                    var index = _this.files.findIndex(function (file) { return file.id === id_1; });\n                    if (index !== -1) {\n                        if (_this.files[index].sub) {\n                            _this.files[index].sub.unsubscribe();\n                        }\n                        _this.serviceEvents.emit({ type: 'cancelled', file: _this.files[index] });\n                        _this.files[index].progress.status = UploadStatus.Canceled;\n                    }\n                    break;\n                case 'cancelAll':\n                    _this.files.forEach(function (file) {\n                        if (file.sub) {\n                            file.sub.unsubscribe();\n                        }\n                        file.progress.status = UploadStatus.Canceled;\n                        _this.serviceEvents.emit({ type: 'cancelled', file: file });\n                    });\n                    break;\n                case 'remove':\n                    if (!event.id) {\n                        return;\n                    }\n                    var i = _this.files.findIndex(function (file) { return file.id === event.id; });\n                    if (i !== -1) {\n                        var file = _this.files[i];\n                        _this.files.splice(i, 1);\n                        _this.serviceEvents.emit({ type: 'removed', file: file });\n                    }\n                    break;\n                case 'removeAll':\n                    if (_this.files.length) {\n                        _this.files = [];\n                        _this.serviceEvents.emit({ type: 'removedAll' });\n                    }\n                    break;\n            }\n        });\n    };\n    NgUploaderService.prototype.uploadFile = function (file, event) {\n        var _this = this;\n        return new __WEBPACK_IMPORTED_MODULE_1_rxjs_Observable__[\"Observable\"](function (observer) {\n            var url = event.url || '';\n            var method = event.method || 'POST';\n            var data = event.data || {};\n            var headers = event.headers || {};\n            var reader = new FileReader();\n            var xhr = new XMLHttpRequest();\n            var time = new Date().getTime();\n            var progressStartTime = (file.progress.data && file.progress.data.startTime) || time;\n            var speed = 0;\n            var eta = null;\n            xhr.upload.addEventListener('progress', function (e) {\n                if (e.lengthComputable) {\n                    var percentage = Math.round((e.loaded * 100) / e.total);\n                    var diff = new Date().getTime() - time;\n                    speed = Math.round(e.loaded / diff * 1000);\n                    progressStartTime = (file.progress.data && file.progress.data.startTime) || new Date().getTime();\n                    eta = Math.ceil((e.total - e.loaded) / speed);\n                    file.progress = {\n                        status: UploadStatus.Uploading,\n                        data: {\n                            percentage: percentage,\n                            speed: speed,\n                            speedHuman: humanizeBytes(speed) + \"/s\",\n                            startTime: progressStartTime,\n                            endTime: null,\n                            eta: eta,\n                            etaHuman: _this.secondsToHuman(eta)\n                        }\n                    };\n                    observer.next({ type: 'uploading', file: file });\n                }\n            }, false);\n            xhr.upload.addEventListener('error', function (e) {\n                observer.error(e);\n                observer.complete();\n            });\n            xhr.onreadystatechange = function () {\n                if (xhr.readyState === XMLHttpRequest.DONE) {\n                    var speedAverage = Math.round(file.size / (new Date().getTime() - progressStartTime) * 1000);\n                    file.progress = {\n                        status: UploadStatus.Done,\n                        data: {\n                            percentage: 100,\n                            speed: speedAverage,\n                            speedHuman: humanizeBytes(speedAverage) + \"/s\",\n                            startTime: progressStartTime,\n                            endTime: new Date().getTime(),\n                            eta: eta,\n                            etaHuman: _this.secondsToHuman(eta || 0)\n                        }\n                    };\n                    file.responseStatus = xhr.status;\n                    try {\n                        file.response = JSON.parse(xhr.response);\n                    }\n                    catch (e) {\n                        file.response = xhr.response;\n                    }\n                    observer.next({ type: 'done', file: file });\n                    observer.complete();\n                }\n            };\n            xhr.open(method, url, true);\n            xhr.withCredentials = event.withCredentials ? true : false;\n            try {\n                var uploadFile_1 = file.nativeFile;\n                var uploadIndex = _this.files.findIndex(function (file) { return file.nativeFile === uploadFile_1; });\n                if (_this.files[uploadIndex].progress.status === UploadStatus.Canceled) {\n                    observer.complete();\n                }\n                file.form.append(event.fieldName || 'file', uploadFile_1, uploadFile_1.name);\n                Object.keys(data).forEach(function (key) { return file.form.append(key, data[key]); });\n                Object.keys(headers).forEach(function (key) { return xhr.setRequestHeader(key, headers[key]); });\n                _this.serviceEvents.emit({ type: 'start', file: file });\n                xhr.send(file.form);\n            }\n            catch (e) {\n                observer.complete();\n            }\n            return function () {\n                xhr.abort();\n                reader.abort();\n            };\n        });\n    };\n    NgUploaderService.prototype.secondsToHuman = function (sec) {\n        return new Date(sec * 1000).toISOString().substr(11, 8);\n    };\n    NgUploaderService.prototype.generateId = function () {\n        return Math.random().toString(36).substring(7);\n    };\n    return NgUploaderService;\n}());\n\n\n\n/***/ }),\n/* 2 */\n/***/ (function(module, __webpack_exports__, __webpack_require__) {\n\n\"use strict\";\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"a\", function() { return NgFileDropDirective; });\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__angular_core__ = __webpack_require__(0);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__angular_core___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_0__angular_core__);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1__classes_ngx_uploader_class__ = __webpack_require__(1);\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nvar __metadata = (this && this.__metadata) || function (k, v) {\n    if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(k, v);\n};\n\n\nvar NgFileDropDirective = (function () {\n    function NgFileDropDirective(elementRef) {\n        this.elementRef = elementRef;\n        this.stopEvent = function (e) {\n            e.stopPropagation();\n            e.preventDefault();\n        };\n        this.upload = new __WEBPACK_IMPORTED_MODULE_1__classes_ngx_uploader_class__[\"a\" /* NgUploaderService */]();\n        this.uploadOutput = new __WEBPACK_IMPORTED_MODULE_0__angular_core__[\"EventEmitter\"]();\n    }\n    NgFileDropDirective.prototype.ngOnInit = function () {\n        var _this = this;\n        this.el = this.elementRef.nativeElement;\n        this.upload.serviceEvents.subscribe(function (event) {\n            _this.uploadOutput.emit(event);\n        });\n        if (this.uploadInput instanceof __WEBPACK_IMPORTED_MODULE_0__angular_core__[\"EventEmitter\"]) {\n            this.upload.initInputEvents(this.uploadInput);\n        }\n        this.el.addEventListener('drop', this.stopEvent, false);\n        this.el.addEventListener('dragenter', this.stopEvent, false);\n        this.el.addEventListener('dragover', this.stopEvent, false);\n    };\n    NgFileDropDirective.prototype.ngOnDestroy = function () {\n        if (this.uploadInput) {\n            this.uploadInput.unsubscribe();\n        }\n    };\n    NgFileDropDirective.prototype.onDrop = function (e) {\n        e.stopPropagation();\n        e.preventDefault();\n        var event = { type: 'drop' };\n        this.uploadOutput.emit(event);\n        this.upload.handleFiles(e.dataTransfer.files);\n    };\n    NgFileDropDirective.prototype.onDragOver = function (e) {\n        if (!e) {\n            return;\n        }\n        var event = { type: 'dragOver' };\n        this.uploadOutput.emit(event);\n    };\n    NgFileDropDirective.prototype.onDragLeave = function (e) {\n        if (!e) {\n            return;\n        }\n        var event = { type: 'dragOut' };\n        this.uploadOutput.emit(event);\n    };\n    __decorate([\n        Object(__WEBPACK_IMPORTED_MODULE_0__angular_core__[\"Input\"])(),\n        __metadata(\"design:type\", __WEBPACK_IMPORTED_MODULE_0__angular_core__[\"EventEmitter\"])\n    ], NgFileDropDirective.prototype, \"uploadInput\", void 0);\n    __decorate([\n        Object(__WEBPACK_IMPORTED_MODULE_0__angular_core__[\"Output\"])(),\n        __metadata(\"design:type\", __WEBPACK_IMPORTED_MODULE_0__angular_core__[\"EventEmitter\"])\n    ], NgFileDropDirective.prototype, \"uploadOutput\", void 0);\n    __decorate([\n        Object(__WEBPACK_IMPORTED_MODULE_0__angular_core__[\"HostListener\"])('drop', ['$event']),\n        __metadata(\"design:type\", Function),\n        __metadata(\"design:paramtypes\", [Object]),\n        __metadata(\"design:returntype\", void 0)\n    ], NgFileDropDirective.prototype, \"onDrop\", null);\n    __decorate([\n        Object(__WEBPACK_IMPORTED_MODULE_0__angular_core__[\"HostListener\"])('dragover', ['$event']),\n        __metadata(\"design:type\", Function),\n        __metadata(\"design:paramtypes\", [Event]),\n        __metadata(\"design:returntype\", void 0)\n    ], NgFileDropDirective.prototype, \"onDragOver\", null);\n    __decorate([\n        Object(__WEBPACK_IMPORTED_MODULE_0__angular_core__[\"HostListener\"])('dragleave', ['$event']),\n        __metadata(\"design:type\", Function),\n        __metadata(\"design:paramtypes\", [Event]),\n        __metadata(\"design:returntype\", void 0)\n    ], NgFileDropDirective.prototype, \"onDragLeave\", null);\n    NgFileDropDirective = __decorate([\n        Object(__WEBPACK_IMPORTED_MODULE_0__angular_core__[\"Directive\"])({\n            selector: '[ngFileDrop]'\n        }),\n        __metadata(\"design:paramtypes\", [__WEBPACK_IMPORTED_MODULE_0__angular_core__[\"ElementRef\"]])\n    ], NgFileDropDirective);\n    return NgFileDropDirective;\n}());\n\n\n\n/***/ }),\n/* 3 */\n/***/ (function(module, __webpack_exports__, __webpack_require__) {\n\n\"use strict\";\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"a\", function() { return NgFileSelectDirective; });\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__angular_core__ = __webpack_require__(0);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__angular_core___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_0__angular_core__);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1__classes_ngx_uploader_class__ = __webpack_require__(1);\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nvar __metadata = (this && this.__metadata) || function (k, v) {\n    if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(k, v);\n};\n\n\nvar NgFileSelectDirective = (function () {\n    function NgFileSelectDirective(elementRef) {\n        var _this = this;\n        this.elementRef = elementRef;\n        this.fileListener = function () {\n            if (_this.el.files) {\n                _this.upload.handleFiles(_this.el.files);\n            }\n        };\n        this.upload = new __WEBPACK_IMPORTED_MODULE_1__classes_ngx_uploader_class__[\"a\" /* NgUploaderService */]();\n        this.uploadOutput = new __WEBPACK_IMPORTED_MODULE_0__angular_core__[\"EventEmitter\"]();\n    }\n    NgFileSelectDirective.prototype.ngOnInit = function () {\n        var _this = this;\n        this.el = this.elementRef.nativeElement;\n        this.el.addEventListener('change', this.fileListener, false);\n        this.upload.serviceEvents.subscribe(function (event) {\n            _this.uploadOutput.emit(event);\n        });\n        if (this.uploadInput instanceof __WEBPACK_IMPORTED_MODULE_0__angular_core__[\"EventEmitter\"]) {\n            this.upload.initInputEvents(this.uploadInput);\n        }\n    };\n    NgFileSelectDirective.prototype.ngOnDestroy = function () {\n        this.el.removeEventListener('change', this.fileListener, false);\n        if (this.uploadInput) {\n            this.uploadInput.unsubscribe();\n        }\n    };\n    __decorate([\n        Object(__WEBPACK_IMPORTED_MODULE_0__angular_core__[\"Input\"])(),\n        __metadata(\"design:type\", __WEBPACK_IMPORTED_MODULE_0__angular_core__[\"EventEmitter\"])\n    ], NgFileSelectDirective.prototype, \"uploadInput\", void 0);\n    __decorate([\n        Object(__WEBPACK_IMPORTED_MODULE_0__angular_core__[\"Output\"])(),\n        __metadata(\"design:type\", __WEBPACK_IMPORTED_MODULE_0__angular_core__[\"EventEmitter\"])\n    ], NgFileSelectDirective.prototype, \"uploadOutput\", void 0);\n    NgFileSelectDirective = __decorate([\n        Object(__WEBPACK_IMPORTED_MODULE_0__angular_core__[\"Directive\"])({\n            selector: '[ngFileSelect]'\n        }),\n        __metadata(\"design:paramtypes\", [__WEBPACK_IMPORTED_MODULE_0__angular_core__[\"ElementRef\"]])\n    ], NgFileSelectDirective);\n    return NgFileSelectDirective;\n}());\n\n\n\n/***/ }),\n/* 4 */\n/***/ (function(module, __webpack_exports__, __webpack_require__) {\n\n\"use strict\";\nObject.defineProperty(__webpack_exports__, \"__esModule\", { value: true });\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__src_ngx_uploader_module_ngx_uploader_module__ = __webpack_require__(5);\n/* harmony namespace reexport (by provided) */ __webpack_require__.d(__webpack_exports__, \"NgUploaderModule\", function() { return __WEBPACK_IMPORTED_MODULE_0__src_ngx_uploader_module_ngx_uploader_module__[\"a\"]; });\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1__src_ngx_uploader_classes_ngx_uploader_class__ = __webpack_require__(1);\n/* harmony namespace reexport (by provided) */ __webpack_require__.d(__webpack_exports__, \"UploadStatus\", function() { return __WEBPACK_IMPORTED_MODULE_1__src_ngx_uploader_classes_ngx_uploader_class__[\"b\"]; });\n/* harmony namespace reexport (by provided) */ __webpack_require__.d(__webpack_exports__, \"humanizeBytes\", function() { return __WEBPACK_IMPORTED_MODULE_1__src_ngx_uploader_classes_ngx_uploader_class__[\"c\"]; });\n/* harmony namespace reexport (by provided) */ __webpack_require__.d(__webpack_exports__, \"NgUploaderService\", function() { return __WEBPACK_IMPORTED_MODULE_1__src_ngx_uploader_classes_ngx_uploader_class__[\"a\"]; });\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_2__src_ngx_uploader_directives_ng_file_select_directive__ = __webpack_require__(3);\n/* harmony namespace reexport (by provided) */ __webpack_require__.d(__webpack_exports__, \"NgFileSelectDirective\", function() { return __WEBPACK_IMPORTED_MODULE_2__src_ngx_uploader_directives_ng_file_select_directive__[\"a\"]; });\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_3__src_ngx_uploader_directives_ng_file_drop_directive__ = __webpack_require__(2);\n/* harmony namespace reexport (by provided) */ __webpack_require__.d(__webpack_exports__, \"NgFileDropDirective\", function() { return __WEBPACK_IMPORTED_MODULE_3__src_ngx_uploader_directives_ng_file_drop_directive__[\"a\"]; });\n\n\n\n\n\n\n/***/ }),\n/* 5 */\n/***/ (function(module, __webpack_exports__, __webpack_require__) {\n\n\"use strict\";\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"a\", function() { return NgUploaderModule; });\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__angular_core__ = __webpack_require__(0);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__angular_core___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_0__angular_core__);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1__directives_ng_file_drop_directive__ = __webpack_require__(2);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_2__directives_ng_file_select_directive__ = __webpack_require__(3);\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\n\n\n\nvar NgUploaderModule = (function () {\n    function NgUploaderModule() {\n    }\n    NgUploaderModule = __decorate([\n        Object(__WEBPACK_IMPORTED_MODULE_0__angular_core__[\"NgModule\"])({\n            declarations: [\n                __WEBPACK_IMPORTED_MODULE_2__directives_ng_file_select_directive__[\"a\" /* NgFileSelectDirective */],\n                __WEBPACK_IMPORTED_MODULE_1__directives_ng_file_drop_directive__[\"a\" /* NgFileDropDirective */]\n            ],\n            exports: [\n                __WEBPACK_IMPORTED_MODULE_2__directives_ng_file_select_directive__[\"a\" /* NgFileSelectDirective */],\n                __WEBPACK_IMPORTED_MODULE_1__directives_ng_file_drop_directive__[\"a\" /* NgFileDropDirective */]\n            ]\n        })\n    ], NgUploaderModule);\n    return NgUploaderModule;\n}());\n\n\n\n/***/ }),\n/* 6 */\n/***/ (function(module, exports) {\n\nmodule.exports = __WEBPACK_EXTERNAL_MODULE_6__;\n\n/***/ }),\n/* 7 */\n/***/ (function(module, exports) {\n\nmodule.exports = __WEBPACK_EXTERNAL_MODULE_7__;\n\n/***/ }),\n/* 8 */\n/***/ (function(module, exports) {\n\nmodule.exports = __WEBPACK_EXTERNAL_MODULE_8__;\n\n/***/ }),\n/* 9 */\n/***/ (function(module, exports) {\n\nmodule.exports = __WEBPACK_EXTERNAL_MODULE_9__;\n\n/***/ }),\n/* 10 */\n/***/ (function(module, exports) {\n\nmodule.exports = __WEBPACK_EXTERNAL_MODULE_10__;\n\n/***/ })\n/******/ ]);\n});\n\n\n// WEBPACK FOOTER //\n// ngx-uploader.umd.js"," \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, {\n \t\t\t\tconfigurable: false,\n \t\t\t\tenumerable: true,\n \t\t\t\tget: getter\n \t\t\t});\n \t\t}\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"/\";\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 4);\n\n\n\n// WEBPACK FOOTER //\n// webpack/bootstrap 09a2b4edf7ecd94e7df2","module.exports = __WEBPACK_EXTERNAL_MODULE_0__;\n\n\n//////////////////\n// WEBPACK FOOTER\n// external \"@angular/core\"\n// module id = 0\n// module chunks = 0","import { EventEmitter } from '@angular/core';\nimport { Observable } from 'rxjs/Observable';\nimport 'rxjs/add/observable/of';\nimport 'rxjs/add/observable/from';\nimport 'rxjs/add/operator/mergeMap';\nimport 'rxjs/add/operator/map';\nexport var UploadStatus;\n(function (UploadStatus) {\n    UploadStatus[UploadStatus[\"Queue\"] = 0] = \"Queue\";\n    UploadStatus[UploadStatus[\"Uploading\"] = 1] = \"Uploading\";\n    UploadStatus[UploadStatus[\"Done\"] = 2] = \"Done\";\n    UploadStatus[UploadStatus[\"Canceled\"] = 3] = \"Canceled\";\n})(UploadStatus || (UploadStatus = {}));\nexport function humanizeBytes(bytes) {\n    if (bytes === 0) {\n        return '0 Byte';\n    }\n    var k = 1024;\n    var sizes = ['Bytes', 'KB', 'MB', 'GB', 'TB', 'PB'];\n    var i = Math.floor(Math.log(bytes) / Math.log(k));\n    return parseFloat((bytes / Math.pow(k, i)).toFixed(2)) + ' ' + sizes[i];\n}\nvar NgUploaderService = (function () {\n    function NgUploaderService() {\n        this.files = [];\n        this.serviceEvents = new EventEmitter();\n    }\n    NgUploaderService.prototype.handleFiles = function (incomingFiles) {\n        var _this = this;\n        (_a = this.files).push.apply(_a, [].map.call(incomingFiles, function (file, i) {\n            var uploadFile = {\n                fileIndex: i,\n                id: _this.generateId(),\n                name: file.name,\n                size: file.size,\n                type: file.type,\n                form: new FormData(),\n                progress: {\n                    status: UploadStatus.Queue,\n                    data: {\n                        percentage: 0,\n                        speed: 0,\n                        speedHuman: humanizeBytes(0) + \"/s\",\n                        startTime: null,\n                        endTime: null,\n                        eta: null,\n                        etaHuman: null\n                    }\n                },\n                lastModifiedDate: file.lastModifiedDate,\n                sub: undefined,\n                nativeFile: file\n            };\n            i = i + 1;\n            _this.serviceEvents.emit({ type: 'addedToQueue', file: uploadFile });\n            return uploadFile;\n        }));\n        this.serviceEvents.emit({ type: 'allAddedToQueue' });\n        var _a;\n    };\n    NgUploaderService.prototype.initInputEvents = function (input) {\n        var _this = this;\n        input.subscribe(function (event) {\n            switch (event.type) {\n                case 'uploadFile':\n                    var uploadFileIndex = _this.files.findIndex(function (file) { return file === event.file; });\n                    if (uploadFileIndex !== -1 && event.file) {\n                        _this.files[uploadFileIndex].sub = _this.uploadFile(event.file, event).subscribe(function (data) {\n                            _this.serviceEvents.emit(data);\n                        });\n                    }\n                    break;\n                case 'uploadAll':\n                    var concurrency = typeof event.concurrency !== 'undefined' && event.concurrency > 0 ? event.concurrency : Number.POSITIVE_INFINITY;\n                    var files = _this.files.filter(function (file) { return file.progress.status === UploadStatus.Queue; });\n                    if (!files.length) {\n                        return;\n                    }\n                    Observable.of.apply(Observable, files).mergeMap(function (file) {\n                        return _this.uploadFile(file, event);\n                    }, concurrency)\n                        .subscribe(function (data) {\n                        _this.serviceEvents.emit(data);\n                    });\n                    break;\n                case 'cancel':\n                    var id_1 = event.id || null;\n                    if (!id_1) {\n                        return;\n                    }\n                    var index = _this.files.findIndex(function (file) { return file.id === id_1; });\n                    if (index !== -1) {\n                        if (_this.files[index].sub) {\n                            _this.files[index].sub.unsubscribe();\n                        }\n                        _this.serviceEvents.emit({ type: 'cancelled', file: _this.files[index] });\n                        _this.files[index].progress.status = UploadStatus.Canceled;\n                    }\n                    break;\n                case 'cancelAll':\n                    _this.files.forEach(function (file) {\n                        if (file.sub) {\n                            file.sub.unsubscribe();\n                        }\n                        file.progress.status = UploadStatus.Canceled;\n                        _this.serviceEvents.emit({ type: 'cancelled', file: file });\n                    });\n                    break;\n                case 'remove':\n                    if (!event.id) {\n                        return;\n                    }\n                    var i = _this.files.findIndex(function (file) { return file.id === event.id; });\n                    if (i !== -1) {\n                        var file = _this.files[i];\n                        _this.files.splice(i, 1);\n                        _this.serviceEvents.emit({ type: 'removed', file: file });\n                    }\n                    break;\n                case 'removeAll':\n                    if (_this.files.length) {\n                        _this.files = [];\n                        _this.serviceEvents.emit({ type: 'removedAll' });\n                    }\n                    break;\n            }\n        });\n    };\n    NgUploaderService.prototype.uploadFile = function (file, event) {\n        var _this = this;\n        return new Observable(function (observer) {\n            var url = event.url || '';\n            var method = event.method || 'POST';\n            var data = event.data || {};\n            var headers = event.headers || {};\n            var reader = new FileReader();\n            var xhr = new XMLHttpRequest();\n            var time = new Date().getTime();\n            var progressStartTime = (file.progress.data && file.progress.data.startTime) || time;\n            var speed = 0;\n            var eta = null;\n            xhr.upload.addEventListener('progress', function (e) {\n                if (e.lengthComputable) {\n                    var percentage = Math.round((e.loaded * 100) / e.total);\n                    var diff = new Date().getTime() - time;\n                    speed = Math.round(e.loaded / diff * 1000);\n                    progressStartTime = (file.progress.data && file.progress.data.startTime) || new Date().getTime();\n                    eta = Math.ceil((e.total - e.loaded) / speed);\n                    file.progress = {\n                        status: UploadStatus.Uploading,\n                        data: {\n                            percentage: percentage,\n                            speed: speed,\n                            speedHuman: humanizeBytes(speed) + \"/s\",\n                            startTime: progressStartTime,\n                            endTime: null,\n                            eta: eta,\n                            etaHuman: _this.secondsToHuman(eta)\n                        }\n                    };\n                    observer.next({ type: 'uploading', file: file });\n                }\n            }, false);\n            xhr.upload.addEventListener('error', function (e) {\n                observer.error(e);\n                observer.complete();\n            });\n            xhr.onreadystatechange = function () {\n                if (xhr.readyState === XMLHttpRequest.DONE) {\n                    var speedAverage = Math.round(file.size / (new Date().getTime() - progressStartTime) * 1000);\n                    file.progress = {\n                        status: UploadStatus.Done,\n                        data: {\n                            percentage: 100,\n                            speed: speedAverage,\n                            speedHuman: humanizeBytes(speedAverage) + \"/s\",\n                            startTime: progressStartTime,\n                            endTime: new Date().getTime(),\n                            eta: eta,\n                            etaHuman: _this.secondsToHuman(eta || 0)\n                        }\n                    };\n                    file.responseStatus = xhr.status;\n                    try {\n                        file.response = JSON.parse(xhr.response);\n                    }\n                    catch (e) {\n                        file.response = xhr.response;\n                    }\n                    observer.next({ type: 'done', file: file });\n                    observer.complete();\n                }\n            };\n            xhr.open(method, url, true);\n            xhr.withCredentials = event.withCredentials ? true : false;\n            try {\n                var uploadFile_1 = file.nativeFile;\n                var uploadIndex = _this.files.findIndex(function (file) { return file.nativeFile === uploadFile_1; });\n                if (_this.files[uploadIndex].progress.status === UploadStatus.Canceled) {\n                    observer.complete();\n                }\n                file.form.append(event.fieldName || 'file', uploadFile_1, uploadFile_1.name);\n                Object.keys(data).forEach(function (key) { return file.form.append(key, data[key]); });\n                Object.keys(headers).forEach(function (key) { return xhr.setRequestHeader(key, headers[key]); });\n                _this.serviceEvents.emit({ type: 'start', file: file });\n                xhr.send(file.form);\n            }\n            catch (e) {\n                observer.complete();\n            }\n            return function () {\n                xhr.abort();\n                reader.abort();\n            };\n        });\n    };\n    NgUploaderService.prototype.secondsToHuman = function (sec) {\n        return new Date(sec * 1000).toISOString().substr(11, 8);\n    };\n    NgUploaderService.prototype.generateId = function () {\n        return Math.random().toString(36).substring(7);\n    };\n    return NgUploaderService;\n}());\nexport { NgUploaderService };\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./lib/src/ngx-uploader/classes/ngx-uploader.class.js\n// module id = 1\n// module chunks = 0","var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nvar __metadata = (this && this.__metadata) || function (k, v) {\n    if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(k, v);\n};\nimport { Directive, ElementRef, EventEmitter, Input, Output, HostListener } from '@angular/core';\nimport { NgUploaderService } from '../classes/ngx-uploader.class';\nvar NgFileDropDirective = (function () {\n    function NgFileDropDirective(elementRef) {\n        this.elementRef = elementRef;\n        this.stopEvent = function (e) {\n            e.stopPropagation();\n            e.preventDefault();\n        };\n        this.upload = new NgUploaderService();\n        this.uploadOutput = new EventEmitter();\n    }\n    NgFileDropDirective.prototype.ngOnInit = function () {\n        var _this = this;\n        this.el = this.elementRef.nativeElement;\n        this.upload.serviceEvents.subscribe(function (event) {\n            _this.uploadOutput.emit(event);\n        });\n        if (this.uploadInput instanceof EventEmitter) {\n            this.upload.initInputEvents(this.uploadInput);\n        }\n        this.el.addEventListener('drop', this.stopEvent, false);\n        this.el.addEventListener('dragenter', this.stopEvent, false);\n        this.el.addEventListener('dragover', this.stopEvent, false);\n    };\n    NgFileDropDirective.prototype.ngOnDestroy = function () {\n        if (this.uploadInput) {\n            this.uploadInput.unsubscribe();\n        }\n    };\n    NgFileDropDirective.prototype.onDrop = function (e) {\n        e.stopPropagation();\n        e.preventDefault();\n        var event = { type: 'drop' };\n        this.uploadOutput.emit(event);\n        this.upload.handleFiles(e.dataTransfer.files);\n    };\n    NgFileDropDirective.prototype.onDragOver = function (e) {\n        if (!e) {\n            return;\n        }\n        var event = { type: 'dragOver' };\n        this.uploadOutput.emit(event);\n    };\n    NgFileDropDirective.prototype.onDragLeave = function (e) {\n        if (!e) {\n            return;\n        }\n        var event = { type: 'dragOut' };\n        this.uploadOutput.emit(event);\n    };\n    __decorate([\n        Input(),\n        __metadata(\"design:type\", EventEmitter)\n    ], NgFileDropDirective.prototype, \"uploadInput\", void 0);\n    __decorate([\n        Output(),\n        __metadata(\"design:type\", EventEmitter)\n    ], NgFileDropDirective.prototype, \"uploadOutput\", void 0);\n    __decorate([\n        HostListener('drop', ['$event']),\n        __metadata(\"design:type\", Function),\n        __metadata(\"design:paramtypes\", [Object]),\n        __metadata(\"design:returntype\", void 0)\n    ], NgFileDropDirective.prototype, \"onDrop\", null);\n    __decorate([\n        HostListener('dragover', ['$event']),\n        __metadata(\"design:type\", Function),\n        __metadata(\"design:paramtypes\", [Event]),\n        __metadata(\"design:returntype\", void 0)\n    ], NgFileDropDirective.prototype, \"onDragOver\", null);\n    __decorate([\n        HostListener('dragleave', ['$event']),\n        __metadata(\"design:type\", Function),\n        __metadata(\"design:paramtypes\", [Event]),\n        __metadata(\"design:returntype\", void 0)\n    ], NgFileDropDirective.prototype, \"onDragLeave\", null);\n    NgFileDropDirective = __decorate([\n        Directive({\n            selector: '[ngFileDrop]'\n        }),\n        __metadata(\"design:paramtypes\", [ElementRef])\n    ], NgFileDropDirective);\n    return NgFileDropDirective;\n}());\nexport { NgFileDropDirective };\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./lib/src/ngx-uploader/directives/ng-file-drop.directive.js\n// module id = 2\n// module chunks = 0","var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nvar __metadata = (this && this.__metadata) || function (k, v) {\n    if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(k, v);\n};\nimport { Directive, ElementRef, EventEmitter, Input, Output } from '@angular/core';\nimport { NgUploaderService } from '../classes/ngx-uploader.class';\nvar NgFileSelectDirective = (function () {\n    function NgFileSelectDirective(elementRef) {\n        var _this = this;\n        this.elementRef = elementRef;\n        this.fileListener = function () {\n            if (_this.el.files) {\n                _this.upload.handleFiles(_this.el.files);\n            }\n        };\n        this.upload = new NgUploaderService();\n        this.uploadOutput = new EventEmitter();\n    }\n    NgFileSelectDirective.prototype.ngOnInit = function () {\n        var _this = this;\n        this.el = this.elementRef.nativeElement;\n        this.el.addEventListener('change', this.fileListener, false);\n        this.upload.serviceEvents.subscribe(function (event) {\n            _this.uploadOutput.emit(event);\n        });\n        if (this.uploadInput instanceof EventEmitter) {\n            this.upload.initInputEvents(this.uploadInput);\n        }\n    };\n    NgFileSelectDirective.prototype.ngOnDestroy = function () {\n        this.el.removeEventListener('change', this.fileListener, false);\n        if (this.uploadInput) {\n            this.uploadInput.unsubscribe();\n        }\n    };\n    __decorate([\n        Input(),\n        __metadata(\"design:type\", EventEmitter)\n    ], NgFileSelectDirective.prototype, \"uploadInput\", void 0);\n    __decorate([\n        Output(),\n        __metadata(\"design:type\", EventEmitter)\n    ], NgFileSelectDirective.prototype, \"uploadOutput\", void 0);\n    NgFileSelectDirective = __decorate([\n        Directive({\n            selector: '[ngFileSelect]'\n        }),\n        __metadata(\"design:paramtypes\", [ElementRef])\n    ], NgFileSelectDirective);\n    return NgFileSelectDirective;\n}());\nexport { NgFileSelectDirective };\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./lib/src/ngx-uploader/directives/ng-file-select.directive.js\n// module id = 3\n// module chunks = 0","var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nimport { NgModule } from '@angular/core';\nimport { NgFileDropDirective } from '../directives/ng-file-drop.directive';\nimport { NgFileSelectDirective } from '../directives/ng-file-select.directive';\nvar NgUploaderModule = (function () {\n    function NgUploaderModule() {\n    }\n    NgUploaderModule = __decorate([\n        NgModule({\n            declarations: [\n                NgFileSelectDirective,\n                NgFileDropDirective\n            ],\n            exports: [\n                NgFileSelectDirective,\n                NgFileDropDirective\n            ]\n        })\n    ], NgUploaderModule);\n    return NgUploaderModule;\n}());\nexport { NgUploaderModule };\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./lib/src/ngx-uploader/module/ngx-uploader.module.js\n// module id = 5\n// module chunks = 0","module.exports = __WEBPACK_EXTERNAL_MODULE_6__;\n\n\n//////////////////\n// WEBPACK FOOTER\n// external \"rxjs/Observable\"\n// module id = 6\n// module chunks = 0","module.exports = __WEBPACK_EXTERNAL_MODULE_7__;\n\n\n//////////////////\n// WEBPACK FOOTER\n// external \"rxjs/add/observable/of\"\n// module id = 7\n// module chunks = 0","module.exports = __WEBPACK_EXTERNAL_MODULE_8__;\n\n\n//////////////////\n// WEBPACK FOOTER\n// external \"rxjs/add/observable/from\"\n// module id = 8\n// module chunks = 0","module.exports = __WEBPACK_EXTERNAL_MODULE_9__;\n\n\n//////////////////\n// WEBPACK FOOTER\n// external \"rxjs/add/operator/mergeMap\"\n// module id = 9\n// module chunks = 0","module.exports = __WEBPACK_EXTERNAL_MODULE_10__;\n\n\n//////////////////\n// WEBPACK FOOTER\n// external \"rxjs/add/operator/map\"\n// module id = 10\n// module chunks = 0"],"sourceRoot":""}